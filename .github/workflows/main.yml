name: Python Test and Package

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:
    branches:
      - main

env:
  HEDWIG_ENV: dev

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8"]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        # Java needed for test_brt
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'temurin'
#          java-version: '11'
  #      - name: Create LFS file list
  #        run: |
  #          git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
  #      - name: Restore LFS cache
  #        uses: actions/cache@v2
  #        id: lfs-cache
  #        with:
  #          path: .git/lfs
  #          key: lfs-v1-${{ hashFiles('.lfs-assets-id') }}
  #          restore-keys: lfs-v1-
  #      - name: Git LFS Pull
  #        run: |
  #          git lfs pull
  #        #      - name: IMOD Container Build
  #        #        id: docker-build-imod
  #        #        env:
  #        #          DOCKERFILE_PATH: utils/imod/
  #        #        run: |
  #        #          docker build -t imod $DOCKERFILE_PATH
  #        #      - name: IMOD Container Test
  #        #        run: |
  #        #          docker run imod dm2mrc -h
  #        #      - name: Graphicsmagick Container Build
  #        #        id: docker-build-graphicsmagick
  #        #        env:
  #        #          DOCKERFILE_PATH: utils/graphicsmagick/
  #        #        run: |
  #        #          docker build -t graphicsmagick $DOCKERFILE_PATH
  #        #      - name: Graphicsmagick Container Test
  #        #        run: |
  #        #          docker run graphicsmagick gm -version
  #        #      - name: Set up Python ${{ matrix.python-version }}
  #        #        uses: actions/setup-python@v2
  #        #        with:
  #        #          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          IMOD=imod_4.11.24_RHEL7-64_CUDA10.1.sh
          export IMOD_DIR=/usr/local/IMOD
          export PATH=$IMOD_DIR/bin:$PATH
          wget https://bio3d.colorado.edu/imod/AMD64-RHEL5/${IMOD} &&  sudo sh ${IMOD} -yes &&  rm -f ${IMOD}
          /usr/local/IMOD/bin/dm2mrc -h
          python -m pip install --upgrade pip
          pip install -e . -r requirements.txt 
          pip install -e . git+https://github.com/niaid/tomojs-pytools@v1.3.6
          sudo apt -y update && sudo apt -y install libgl-dev graphicsmagick
          export HEDWIG_ENV=dev

      - name: Test Coverage
        run: |
          continue-on-error: true
          pytest --cov-report term --cov=. test/test_dm.py test/test_utils.py
          ls -l coverage.svg
          ls -l .coverage

      - name: Coverage Badge
        uses: tj-actions/coverage-badge-py@v2

      - name: Verify Changed files
        uses: tj-actions/verify-changed-files@v13
        id: verify-changed-files
        with:
          files: coverage.svg

      - name: Commit files
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add coverage.svg
          git commit -m "Updated coverage.svg"

      - name: Push changes
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.github_token }}
          branch: ${{ github.ref }}

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install -r docs/requirements.txt
      - name: Build Sphinx Documentation
        run: |
          export HEDWIG_ENV=dev
          make -C docs html
#      - name: Upload documentation
#        if: github.event_name == 'push'
#        uses: actions/upload-artifact@v1
#        with:
#          name: sphinx-docs
#          path: docs/_build/html
#      - name: Update gh-pages
#        if: github.ref == 'refs/heads/main'
#        run: |
#          rm docs/_build/html/.buildinfo
#          touch docs/_build/html/.nojekyll
#          git update-ref refs/heads/${TARGET_BRANCH} origin/${TARGET_BRANCH}
#          ./.github/workflows/update-gh-pages.sh docs/_build/html
#          repo_uri="https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
#          git push $repo_uri ${TARGET_BRANCH}
#        env:
#          GITHUB_TOKEN: ${{ secrets.github_token }}
#          TARGET_BRANCH: "gh-pages"
